use Fcntl ;
use DB_File;
#use GDBM_File;

print "topz\n" ;
unlink "/tmp/dbfile" ;

$bsize = 2**16 ;
#$size  = (1024 * 56) ;
$size  = (1024 * 1000) ;

$DB_HASH->{'bsize'} = $bsize ;
$X = tie(%db, DB_File, "/tmp/dbfile", O_CREAT|O_RDWR, 0644, $DB_HASH)
    or die "tie die: $!\n" ;
#dbmopen(%db, "/tmp/dbfile", 0644);


$lkey = 'x' x 1024;

$db{'1'} = 'fred';			# 5 -> 4
$db{'12'} = 'fred' x 1024;		# 4 -> 4096
$db{'123'} = 'x' x $size ;	# 5 -> 1048576
#$X->put('123', 'x' x (1024* 56) );	# 5 -> 1048576
$db{$lkey} = 'x' x 1024;		# 1024 -> 1024

$X = '' ;
untie(%db);
#dbmclose(%db);

print "Written\n" ;
print "here\n" ;

#dbmopen(%s, "/tmp/dbfile", undef);
#$DB_HASH->{'bsize'} = $bsize ;
$Y = tie(%s, DB_File, "/tmp/dbfile", O_RDWR, 0644, $DB_HASH);
#$Y = tie(%s, DB_File, "/tmp/dbfile", O_RDWR, 0644);

if (0) {
    for ( $status = $Y->seq($k, $v, R_FIRST) ;
          $status == 0 ;
          $status = $Y->seq($k, $v, R_NEXT)
        ) {
	    $l = length($v);
	    $kl = length($k);
	    print "$status ($!), ($kl) -> ($l)\n";
	    $! = 0 ;
    }
    print "EOF $status ($!), ($kl) -> ($l)\n";
}
else {

    while (($k, $v) = each %s) {
	    $l = length($v);
	    $kl = length($k);
	    print "($kl) -> ($l)\n";
    }
}
$y = length $s{'123'} ;
print "got $y \n" if $s{'123'} ;
#dbmclose(%s);
untie %s ;

print "done\n" ;
exit 0;

__END__

