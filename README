                                     DB_File

                                  Version 1.04

                                  21st Oct 1996

             Copyright (c) 1995/6 Paul Marquess. All rights reserved.
         This program is free software; you can redistribute it and/or
                modify it under the same terms as Perl itself.



DESCRIPTION
-----------

DB_File is a module which allows Perl programs to make use of the
facilities provided by Berkeley DB.  

Berkeley DB is a C library which provides a consistent interface to a
number of database formats. DB_File provides an interface to all three
of the database types (hash, btree and recno) currently supported by
Berkeley DB.

For further details see the pod documentation embedded in the file
DB_File.pm.

PREREQUISITES
-------------

Before you can build DB_File you need to have the following installed
on your system:

    * Perl 5.003 or better. 
    * Berkeley DB. 

      Berkeley DB is available at your nearest CPAN archive (see
      the section on CPAN in the perlmod manpage for a list) in
      src/misc/db.1.85.tar.gz, or via the host ftp.cs.berkeley.edu in
      /ucb/4bsd/db.tar.gz.  It is not under the GPL.
 
      If you are running IRIX, then get Berkeley DB from
      http://reality.sgi.com/ariel. It has the patches necessary to
      compile properly on IRIX 5.3.


BUILDING THE MODULE
-------------------

Assuming you have met all the prerequisites, building the module should
be relatively straightforward.

The only things you might have to change for building the module are
the names of the directories where the db library, libdb, is installed
and the directory where db.h is stored. Edit Makefile.PL
and change ZLIB_LIB and ZLIB_INCLUDE if necessary.

The module can now be built using this sequence of commands:

    perl Makefile.PL
    make
    make test

INSTALLATION
------------

As DB_File is a 

    make install

FEEDBACK
--------

I have tested Compress::Zlib on both SunOS 4.1.3 (Sun C compiler) and
Solaris 2.3 (Sun C compiler again). If you are building the module on
another architecture I would appreciate a note to tell me how you got
on. Although I am particularly interested to hear about any problems
you encounter when building the system, I would still like to hear from
you even if you don't.

Things I particularly would like to know

   * The Operating system name and version, e.g. SunOS 4.1.3
   * Architecture, e.g. Solaris
   * C compiler, e.g. gcc
   * Where there any warnings/errors printed by the C compiler? If so
     please send the exact output if possible.


CHANGES
-------

See DB_File.pm
 
Paul Marquess <pmarquess@bfsec.bt.co.uk>

