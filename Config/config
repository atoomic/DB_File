
use Dist ;


# If db.h isn't stored someplace obvious
# for example:
#
#    $DBH_L = "-I/usr/local/include" ;
#
$DBH_I = "-I." ;

# If libdb isn't stored 
# for example:
#
#    $DBH_L = "-L/usr/local/bin" ;
#
#$DBH_L = "" ;

#########################
#
#  Don't change anything from here on.
#
#########################

$header = "db.h" ;
$library = "db" ;
$module  = "DB_File" ;

$dist = new Dist ;

# Check if DB_File is already installed
foreach (@INC) {
    last if $_ eq "$dist->{installprivlib}/site_perl" ;
    next if(/site_perl/);
    push (@conflict, $_) if -e "$_/$module.pm" ;
}

	warn <<"MSG_EOF" if @conflict ;
*** WARNING ***
An installed copy of the $module module found in the following directorie(s)
   @conflict
This can cause a version conflict as this version installs in
   $dist->{installprivlib}/site_perl
which comes later in Perl $]'s include directory list.

You may need to manually remove these older $module directories if
this version of $module does not run correctly.

MSG_EOF



if ($DBH_I) {
    $dist->{'ccflags'} = "$DBH_I $dist->{'ccflags'}" ;
    print "Checking...\n" ;
    #if (-r $DBH_I)
}


# see if this is a db.h system
print "\nChecking for $header...\n" ;
my $x = $dist->findhdr ($header) ;

if ($x) 
  { print "Found it at $x\n" }
else {
    print "Could not find it.\n" ;
    exit 1 ;
}

# check for libdb
print "\nChecking for library lib$library...\n" ;
@a = $dist->chkLib("-l$library") ;
if ($a[3])
  { print "found it in $a[3]\n" }
else {
    print "could not find it. \n" ;
    exit 1 ;
}

# Check the return type needed for hash and prefix

$DEFINE = $dist->BerkeleyDB_hash_type() . " " . 
          $dist->BerkeleyDB_prefix_type() ;

print "DEFINE = [$DEFINE]\n" ;
